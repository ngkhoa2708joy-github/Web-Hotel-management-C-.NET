@*Index of Room Page*@

@model WebAppHotelManagement.ViewModel.RoomViewModel
@{
    ViewBag.Title = "Hotel Room";
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        LoadRoomDetails();
        $("#txtRoomId").val("0");
        $('#btnSave').click(function () {
            if (!$("#formRoom").valid()) {
                return;
            }
            SaveRoomData();
        });
    });

    function DeleteRoom(roomId) {
        var result = confirm("Are You sure you want to remove?");
        if (result == false) {
            return false;
        }
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset = utf-8',
            data: { roomId: roomId },
            url: '/Room/DeleteRoomDetails',
            success: function (data) {
                if (data.success == true) {
                    alert(data.message);
                    LoadRoomDetails();
                }
            },

            error: function () {
                alert("There is some problem to process your request. Try again later!")

            }
        });

    }

    function EditRoom(roomId) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset = utf-8',
            data: { roomId: roomId },
            url: '/Room/EditRoomDetails',
            success: function (data) {
                console.log(data);
                $("#txtRoomNumber").val(data.RoomNumber);
                $("#txtRoomPrice").val(data.RoomPrice);
                $("#ddBookingStatus").val(data.BookingStatusId);
                $("#ddRoomType").val(data.RoomTypeId);
                $("#isActive").val(data.Is)
                $("#txtRoomCapacity").val(data.RoomCapacity);
                $("#txtRoomDescription").val(data.RoomDescription);
                $("#imgRoom").attr('src', "../RoomImages/" + data.RoomImage);
                $("#divAddRoom").modal({ show: true });
                $("#txtRoomId").val(data.RoomId);
                $("#btnSave").text("Update");


            },

            error: function () {
                alert('There is some problem to process your request. Try again later!')
            }
        });
    }

    function LoadRoomDetails() {
        //$("#divLoadRoomDetails")

        $.ajax({
            async: true,
            contentType: false,
            processData: false,
            data: 'GET',
            dataType: 'HTML',
            url: "/Room/GetAllRooms",
            success: function (data) {
                $("#divLoadRoomDetails").html(data);

            },

            error: function () {
                alert('There is some problem to process your request. Try again later!')
            }

        });

    }

    function SaveRoomData() {
        var formData = new FormData;
        formData.append("RoomId", $("#txtRoomId").val());
        formData.append("RoomNumber", $("#txtRoomNumber").val());
        formData.append("RoomPrice", $("#txtRoomPrice").val());
        formData.append("BookingStatusId", $("#ddBookingStatus").val());
        formData.append("RoomTypeId", $("#ddRoomType").val());
        formData.append("RoomCapacity", $("#txtRoomCapacity").val());
        formData.append("RoomDescription", $("#txtRoomDescription").val());
        formData.append("Image", $("#UploadImage").get(0).files[0]);

        $.ajax({
            async: true,
            type: 'POST',
            contentType: false,
            processData: false,
            data: formData,
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    ResetRoomInformation();
                    LoadRoomDetails();

                }
            },
            error: function () {
                alert("There is a problem to process your request. Try again later!");
            }

        })
    }

    function ResetRoomInformation() {
        $("#txtRoomNumber").val('');
        $("#txtRoomPrice").val('');
        $("#ddBookingStatus").val('');
        $("#ddRoomType").val('');
        $("#txtRoomCapacity").val('');
        $("#txtRoomDescription").val('');
        $("#UploadImage").val('');
        $("#imgRoom").removeAttr('src');
        $("#txtRoomId").val(0);
        $("#txtRoomNumber").focus();
        $("#btnSave").val("Save");

    }

    function DisplayImage(result) {
        if (result.files && result.files[0]) {
            var fileReader = new FileReader();
            fileReader.onload = function (e) {
                $("#imgRoom").attr('src', e.target.result);
            }
            fileReader.readAsDataURL(result.files[0]);
        }
    }
</script>
@if (Session["UserId"] != null || Session["UserName"] != null)
{
    if (Session["UserName"].Equals("admin"))
    {
        <div style="margin-top: 50px">
            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divAddRoom" data-backdrop="static" data-keyboard="false">Add Room</button>
        </div>
    }


}


<div id="divAddRoom" class="modal fade" role="dialog">
    <div class="modal-header">
        <div class="modal-content">
            <div class="modal-header">

                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Room's Hotel</h4>
            </div>

            @*Body Here*@
            <div class="modal-body">
                <form id="formRoom">
                    <div class="container">
                        @Html.HiddenFor(model => model.RoomId, new { @id = "txtRoomId" })
                        @Html.AntiForgeryToken()
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RoomNumber)
                            @Html.TextBoxFor(model => model.RoomNumber, new { @class = "form-control", id = "txtRoomNumber" })
                            @Html.ValidationMessageFor(model => model.RoomNumber, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RoomPrice)
                            @Html.TextBoxFor(model => model.RoomPrice, new { @class = "form-control", id = "txtRoomPrice" })
                            @Html.ValidationMessageFor(model => model.RoomPrice, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.BookingStatusId)
                            @Html.DropDownListFor(model => model.BookingStatusId, @Model.ListOfBookingStatus, new { @class = "form-control", id = "ddBookingStatus" })
                            @Html.ValidationMessageFor(model => model.BookingStatusId, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RoomTypeId)
                            @Html.DropDownListFor(model => model.RoomTypeId, @Model.ListOfRoomType, new { @class = "form-control", id = "ddRoomType" })
                            @Html.ValidationMessageFor(model => model.RoomTypeId, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RoomCapacity)
                            @Html.TextBoxFor(model => model.RoomCapacity, new { @class = "form-control", id = "txtRoomCapacity" })
                            @Html.ValidationMessageFor(model => model.RoomCapacity, null, new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RoomDescription)
                            @Html.TextBoxFor(model => model.RoomDescription, new { @class = "form-control", id = "txtRoomDescription" })
                            @Html.ValidationMessageFor(model => model.RoomDescription, null, new { @class = "text-danger" })

                        </div>

                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.RoomImage)
                            <input id="UploadImage" type="file" class="form-control" name="roomImage" title="Load Image" onchange="DisplayImage(this)" />
                            <img id="imgRoom" height="250" width="250" style="border:ridge" />
                        </div>
                    </div>
                </form>
            </div>
            @*Body End*@

            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success">Save</button> &nbsp;
                <button type="button" data-dismiss="modal" class="btn btn-danger">close</button> &nbsp;
            </div>
        </div>

    </div>
</div>

<div style="margin-top:60px"></div>
<div id="divLoadRoomDetails">

</div>
