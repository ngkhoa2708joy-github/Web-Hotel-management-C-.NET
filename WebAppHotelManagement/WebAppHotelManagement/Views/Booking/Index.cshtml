@model WebAppHotelManagement.ViewModel.BookingViewModel

@{
    ViewBag.Title = "Hotel Booking";
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />


<script type="text/javascript">
    $(document).ready(function () {
       
        $("#btnSave").click(function () {
            if (!$("#formCustomerBooking").valid()) {
                return;
            }
            AddCustomerBooking();

        });

        LoadBookingHistory();

    });

    function DateTimePicker() {
        $('.datepicker').datepicker({
            dateFormat: 'dd-M-yy',
            changeMonth: true,
            changeYear: true,
            showOn: 'button',
            sideBySide: true,
            controlType: 'select',
            buttonText: '<span class="glyphicon glyphicon-calendar"></span>',
            minDate: new Date(),
        });
    
    }

    function LoadBookingHistory()
    {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'HTML',
            contentType: false,
            processType:false,
            url: '/Booking/GetAllBookingHistory',
            
            success: function (data) {
                $("#divBookingHistory").html(data);
            },
            error: function () {
                alert("There is some problem to process your request, pls try again later!");
            }
        })
    }

    function ResetBooking() {
        $("#txtCustomerName").val('');
        $("#txtCustomerAddress").val('');
        $("#txtCustomerPhone").val('');
        $("#txtNumberOfMembers").val('');
        $("#ddAssignRoomId").val(1);
        $("#txtCustomerName").focus();
    }

    function AddCustomerBooking() {
        var objBookingViewModel = {};
        objBookingViewModel.CustomerName = $("#txtCustomerName").val();
        objBookingViewModel.CustomerAddress =$("#txtCustomerAddress").val();
        objBookingViewModel.CustomerPhone = $("#txtCustomerPhone").val();
        objBookingViewModel.BookingFrom = $("#txtBookingFrom").val();
        objBookingViewModel.BookingTo = $("#txtBookingTo").val();
        objBookingViewModel.NumberOfMembers = $("#txtNumberOfMembers").val();
        objBookingViewModel.AssignRoomId = $("#ddAssignRoomId").val();

        $.ajax({
            async: true,
            type: 'POST',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            url: '/Booking/Index',
            data: JSON.stringify(objBookingViewModel),
            success: function (data) {
                if (data.success === true) {
                    alert(data.message);
                    ResetBooking();
                    LoadBookingHistory();
                }
            },
            error: function () {
                alert("There is some problem to process your request, pls try again later!");
            }
        })
    }

</script>



<div style="margin-top: 50px">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#divNewBooking" data-backdrop="static" data-keyboard="false">New Booking</button>
</div>

<div id="divNewBooking" class="modal fade" role="dialog">
    <div class="modal-header">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">New Booking</h3>
            </div>

            @*Body Here*@
            <div class="modal-body">
                <form id="formCustomerBooking">
                    <div class="container">
                        <div class="row">

                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.CustomerName, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @id = "txtCustomerName" })
                                @Html.ValidationMessageFor(model => model.CustomerName, null, new { @class = "text-danger" })
                            </div>



                            <div class="form-group col-md-6" style="margin-top: 10px">
                                @Html.LabelFor(model => model.CustomerAddress, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.CustomerAddress, new { @class = "form-control", @id = "txtCustomerAddress" })
                                @Html.ValidationMessageFor(model => model.CustomerAddress, null, new { @class = "text-danger" })
                            </div>



                            <div class="form-group col-md-6" style="margin-top: 10px">
                                @Html.LabelFor(model => model.CustomerPhone, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.CustomerPhone, new { @class = "form-control", @id = "txtCustomerPhone" })
                                @Html.ValidationMessageFor(model => model.CustomerPhone, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6" style="margin-top: 10px">
                                @Html.LabelFor(model => model.NumberOfMembers, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.NumberOfMembers, new { @class = "form-control", @id = "txtNumberOfMembers" })
                                @Html.ValidationMessageFor(model => model.NumberOfMembers, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6" style="margin-top: 10px">
                                @Html.LabelFor(model => model.BookingFrom, new { @class = "control-label" })
                                @Html.EditorFor(model => model.BookingFrom, new { htmlAttributes = new { @readonly = "true", Value = Model.BookingFrom.ToString("dd-MMM-yyyy"), @class = "form-control datepicker", @id = "txtBookingFrom" } })
                                @Html.ValidationMessageFor(model => model.BookingFrom, null, new { @class = "text-danger" })
                            </div>


                            <div class="form-group col-md-6" style="margin-top: 10px" textmode="Date">
                                @Html.LabelFor(model => model.BookingTo, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.BookingTo, new { @class = "form-control", @id = "txtBookingTo" })
                                @Html.ValidationMessageFor(model => model.BookingTo, null, new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-6" style="margin-top: 10px">
                                @Html.LabelFor(model => model.AssignRoomId, new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.AssignRoomId, Model.ListOfRooms, new { @class = "form-control", @id = "ddAssignRoomId" })
                                @Html.ValidationMessageFor(model => model.AssignRoomId, null, new { @class = "text-danger" })
                            </div>

                        </div>

                    </div>
                </form>
            </div>
            @*Body End*@

            <div class="modal-footer">
                <button id="btnSave" type="button" class="btn btn-success">Save</button> &nbsp;
                <button type="button" data-dismiss="modal" class="btn btn-danger">close</button> &nbsp;
            </div>
        </div>

    </div>
</div>

<div style="margin-top:30px"></div>

<div id="divBookingHistory">

</div>


